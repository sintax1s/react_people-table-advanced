{"version":3,"sources":["utils/searchHelper.ts","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonComponent.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","centuriesArray","PeopleFilters","useSearchParams","searchParams","setSearchParams","centuries","getAll","sex","get","query","toggleCenturies","century","includes","filter","ch","toggleSex","newSex","className","cn","to","search","type","placeholder","onChange","event","newQuery","toggleQuery","target","map","length","Loader","PersonComponent","person","name","born","died","fatherName","motherName","slug","mother","father","personSlug","useParams","useLocation","sortCategories","title","urlParam","PeopleTable","people","visiblePeople","sort","order","sortCategory","sortType","find","p","personWithParents","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","getPeople","peopleFromServer","catch","finally","filteredPeople","Math","ceil","validQuery","toLocaleLowerCase","trim","person1","person2","localeCompare","getFilteredPeople","Navbar","getClass","isActive","role","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2d3fdb67.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { getSearchWith } from '../utils/searchHelper';\n\nconst centuriesArray = [\n  '16', '17', '18', '19', '20',\n];\n\nexport const PeopleFilters: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const centuries = searchParams.getAll('centuries') || [];\n  const sex = searchParams.get('sex') || 'All';\n  const query = searchParams.get('query') || '';\n\n  const toggleCenturies = (century: string) => {\n    if (!century) {\n      return getSearchWith(searchParams, {\n        centuries: [],\n      });\n    }\n\n    return getSearchWith(searchParams, {\n      centuries: centuries.includes(century)\n        ? centuries.filter(ch => ch !== century)\n        : [...centuries, century],\n    });\n  };\n\n  const toggleSex = (newSex: string | null) => {\n    if (newSex === 'All') {\n      return getSearchWith(searchParams, { sex: null });\n    }\n\n    return getSearchWith(searchParams, { sex: newSex });\n  };\n\n  const toggleQuery = (newQuery: string) => {\n    const search = getSearchWith(searchParams, { query: newQuery });\n\n    setSearchParams(search);\n  };\n\n  const toggleAllReset = () => {\n    return getSearchWith(\n      searchParams, { query: null, centuries: [], sex: null },\n    );\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <Link\n          className={cn({ 'is-active': sex === 'All' })}\n          to={{ search: toggleSex('All') }}\n        >\n          All\n        </Link>\n        <Link\n          className={cn({ 'is-active': sex === 'm' })}\n          to={{ search: toggleSex('m') }}\n        >\n          Male\n        </Link>\n        <Link\n          className={cn({ 'is-active': sex === 'f' })}\n          to={{ search: toggleSex('f') }}\n        >\n          Female\n        </Link>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={(event) => toggleQuery(event.target.value)}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centuriesArray.map((century) => (\n              <Link\n                data-cy=\"century\"\n                className={cn('button mr-1', {\n                  'is-info': centuries.includes(century),\n                })}\n                to={{\n                  search: toggleCenturies(century),\n                }}\n              >\n                {century}\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className={cn('button is-success', {\n                'is-outlined': centuries.length,\n              })}\n              to={{ search: toggleCenturies('') }}\n\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          className=\"button is-link is-outlined is-fullwidth\"\n          to={{ search: toggleAllReset() }}\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonComponent: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  const { personSlug } = useParams();\n  const { search } = useLocation();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': slug === personSlug })}\n    >\n      <td>\n        <Link\n          to={`${slug + search}`}\n          className={cn({ 'has-text-danger': sex === 'f' })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      {mother\n        ? (\n          <td>\n            <Link\n              to={`${mother.slug + search}`}\n              className=\"has-text-danger\"\n            >\n              {motherName}\n            </Link>\n          </td>\n        )\n        : <td>{motherName || '-'}</td>}\n      {father\n        ? <td><Link to={`${father.slug + search}`}>{fatherName}</Link></td>\n        : <td>{fatherName || '-'}</td>}\n    </tr>\n  );\n};\n","import { Link, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types';\nimport { PersonComponent } from './PersonComponent';\nimport { getSearchWith } from '../utils/searchHelper';\n\ntype Props = {\n  people: Person[];\n  visiblePeople: Person[];\n};\n\nconst sortCategories = [\n  { title: 'Name', urlParam: 'name' },\n  { title: 'Sex', urlParam: 'sex' },\n  { title: 'Born', urlParam: 'born' },\n  { title: 'Died', urlParam: 'died' },\n];\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  visiblePeople,\n}) => {\n  const [searchParams] = useSearchParams();\n\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  const sortToggle = (sortType: string) => {\n    if (sort !== sortType) {\n      return getSearchWith(searchParams, { sort: sortType, order: null });\n    }\n\n    if (sort === sortType && order === 'desc') {\n      return getSearchWith(searchParams, { sort: null, order: null });\n    }\n\n    return getSearchWith(searchParams, { sort: sortType, order: 'desc' });\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {sortCategories.map((sortCategory) => (\n            <th key={sortCategory.title}>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {sortCategory.title}\n                <Link to={{ search: sortToggle(sortCategory.urlParam) }}>\n                  <span className=\"icon\">\n                    <i className={cn('fas',\n                      {\n                        'fa-sort': sort !== sortCategory.urlParam,\n                        'fa-sort-down': sort === sortCategory.urlParam\n                        && order === 'desc',\n                        'fa-sort-up': sort === sortCategory.urlParam\n                        && order !== 'desc',\n                      })}\n                    />\n                  </span>\n                </Link>\n              </span>\n            </th>\n          ))}\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visiblePeople.map((person) => {\n          const mother = people.find(\n            p => p.name === person.motherName,\n          );\n\n          const father = people.find(\n            p => p.name === person.fatherName,\n          );\n\n          const personWithParents = {\n            ...person,\n            mother,\n            father,\n          };\n\n          return (\n            <PersonComponent person={personWithParents} key={person.slug} />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const [searchParams] = useSearchParams();\n  const centuries = searchParams.getAll('centuries') || [];\n  const sex = searchParams.get('sex') || 'All';\n  const query = searchParams.get('query') || '';\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((peopleFromServer) => setPeople(peopleFromServer))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const getFilteredPeople = () => {\n    let filteredPeople = [...people];\n\n    if (centuries.length) {\n      filteredPeople = filteredPeople.filter(\n        person => centuries.includes(\n          Math.ceil(person.born / 100).toString(),\n        ),\n      );\n    }\n\n    if (sex !== 'All') {\n      filteredPeople = filteredPeople.filter(person => person.sex === sex);\n    }\n\n    if (query) {\n      const validQuery = query.toLocaleLowerCase().trim();\n\n      filteredPeople = filteredPeople.filter(\n        (person) => person.name.toLocaleLowerCase().includes(validQuery)\n      || person.fatherName?.toLocaleLowerCase().includes(validQuery)\n      || person.motherName?.toLocaleLowerCase().includes(validQuery),\n      );\n    }\n\n    if (sort) {\n      switch (sort) {\n        case 'name':\n        case 'sex':\n          filteredPeople = filteredPeople.sort((person1, person2) => {\n            return (order === 'desc')\n              ? person2[sort].localeCompare(person1[sort])\n              : person1[sort].localeCompare(person2[sort]);\n          });\n          break;\n        case 'born':\n        case 'died':\n          filteredPeople = filteredPeople.sort((person1, person2) => {\n            return (order === 'desc')\n              ? person2[sort] - person1[sort]\n              : person1[sort] - person2[sort];\n          });\n          break;\n        default:\n      }\n    }\n\n    return filteredPeople;\n  };\n\n  const visiblePeople = getFilteredPeople();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!isLoading && (\n              <PeopleFilters />\n            )}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {isError && (\n                <p data-cy=\"peopleLoadingError\">Something went wrong</p>\n              )}\n              {!isLoading && !isError && !people.length && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n              {!visiblePeople.length && !isLoading && (\n                <p>There are no people matching the current search criteria</p>\n              )}\n              {!isLoading && !isError && !!visiblePeople.length && (\n                <PeopleTable\n                  people={people}\n                  visiblePeople={visiblePeople}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ninterface NavLinkProps {\n  isActive?: boolean;\n}\n\nexport const Navbar = () => {\n  const getClass = ({ isActive }: NavLinkProps) => {\n    return cn('navbar-item', { 'has-background-grey-lighter': isActive });\n  };\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getClass} to=\"/\">Home</NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={getClass}\n            to=\"people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\" element={<PeoplePage />}>\n              <Route path=\":personSlug?\" element={<PeoplePage />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}
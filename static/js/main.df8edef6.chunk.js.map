{"version":3,"sources":["utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonComponent.tsx","components/PeopleTable.tsx","api.ts","utils/getFilteredPeople.ts","components/PeoplePage.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","to","search","centuriesArray","sexArray","title","urlParam","PeopleFilters","setSearchParams","centuries","getAll","sex","get","query","toggleCenturies","century","includes","filter","ch","className","map","currSex","cn","newSex","type","placeholder","onChange","event","newQuery","toggleQuery","target","length","Loader","PersonComponent","person","name","born","died","fatherName","motherName","slug","mother","father","personSlug","useParams","useLocation","sortCategories","PeopleTable","people","visiblePeople","sort","order","sortCategory","sortType","find","p","personWithParents","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","filters","filteredPeople","Math","ceil","validQuery","toLocaleLowerCase","trim","person1","person2","localeCompare","getFilteredPeople","useEffect","getPeople","catch","finally","Navbar","getClass","isActive","role","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.df8edef6.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\n\nconst centuriesArray = [\n  '16', '17', '18', '19', '20',\n];\n\nconst sexArray = [\n  { title: 'All', urlParam: 'All' },\n  { title: 'Male', urlParam: 'm' },\n  { title: 'Female', urlParam: 'f' },\n];\n\nexport const PeopleFilters: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const centuries = searchParams.getAll('centuries') || [];\n  const sex = searchParams.get('sex') || 'All';\n  const query = searchParams.get('query') || '';\n\n  const toggleCenturies = (century: string) => {\n    if (!century) {\n      return { centuries: [] };\n    }\n\n    return {\n      centuries: centuries.includes(century)\n        ? centuries.filter(ch => ch !== century)\n        : [...centuries, century],\n    };\n  };\n\n  const toggleSex = (newSex: string | null) => {\n    if (newSex === 'All') {\n      return { sex: null };\n    }\n\n    return { sex: newSex };\n  };\n\n  const toggleQuery = (newQuery: string) => {\n    const search = getSearchWith(searchParams, { query: newQuery || null });\n\n    setSearchParams(search);\n  };\n\n  const toggleAllReset = () => {\n    return { query: null, centuries: [], sex: null };\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        {sexArray.map((currSex) => (\n          <SearchLink\n            className={cn({ 'is-active': sex === currSex.urlParam })}\n            params={toggleSex(currSex.urlParam)}\n          >\n            {currSex.title}\n          </SearchLink>\n        ))}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={(event) => toggleQuery(event.target.value)}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centuriesArray.map((century) => (\n              <SearchLink\n                data-cy=\"century\"\n                className={cn('button mr-1', {\n                  'is-info': centuries.includes(century),\n                })}\n                params={toggleCenturies(century)}\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={cn('button is-success', {\n                'is-outlined': centuries.length,\n              })}\n              params={toggleCenturies('')}\n\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={toggleAllReset()}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonComponent: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  const { personSlug } = useParams();\n  const { search } = useLocation();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': slug === personSlug })}\n    >\n      <td>\n        <Link\n          to={`${slug + search}`}\n          className={cn({ 'has-text-danger': sex === 'f' })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      {mother\n        ? (\n          <td>\n            <Link\n              to={`${mother.slug + search}`}\n              className=\"has-text-danger\"\n            >\n              {motherName}\n            </Link>\n          </td>\n        )\n        : <td>{motherName || '-'}</td>}\n      {father\n        ? <td><Link to={`${father.slug + search}`}>{fatherName}</Link></td>\n        : <td>{fatherName || '-'}</td>}\n    </tr>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types';\nimport { PersonComponent } from './PersonComponent';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  people: Person[];\n  visiblePeople: Person[];\n};\n\nconst sortCategories = [\n  { title: 'Name', urlParam: 'name' },\n  { title: 'Sex', urlParam: 'sex' },\n  { title: 'Born', urlParam: 'born' },\n  { title: 'Died', urlParam: 'died' },\n];\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  visiblePeople,\n}) => {\n  const [searchParams] = useSearchParams();\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  const sortToggle = (sortType: string) => {\n    if (sort !== sortType) {\n      return { sort: sortType, order: null };\n    }\n\n    if (sort === sortType && order === 'desc') {\n      return { sort: null, order: null };\n    }\n\n    return { sort: sortType, order: 'desc' };\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {sortCategories.map((sortCategory) => (\n            <th key={sortCategory.title}>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {sortCategory.title}\n                <SearchLink params={sortToggle(sortCategory.urlParam)}>\n                  <span className=\"icon\">\n                    <i className={cn('fas',\n                      {\n                        'fa-sort': sort !== sortCategory.urlParam,\n                        'fa-sort-down': sort === sortCategory.urlParam\n                        && order === 'desc',\n                        'fa-sort-up': sort === sortCategory.urlParam\n                        && order !== 'desc',\n                      })}\n                    />\n                  </span>\n                </SearchLink>\n              </span>\n            </th>\n          ))}\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visiblePeople.map((person) => {\n          const mother = people.find(\n            p => p.name === person.motherName,\n          );\n\n          const father = people.find(\n            p => p.name === person.fatherName,\n          );\n\n          const personWithParents = {\n            ...person,\n            mother,\n            father,\n          };\n\n          return (\n            <PersonComponent person={personWithParents} key={person.slug} />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Person } from '../types';\n\nexport const getFilteredPeople = (\n  people: Person[], filters: URLSearchParams,\n) => {\n  let filteredPeople = [...people];\n  const query = filters.get('query') || '';\n  const sort = filters.get('sort') || '';\n  const order = filters.get('order') || '';\n  const centuries = filters.getAll('centuries') || [];\n  const sex = filters.get('sex') || 'All';\n\n  if (centuries.length) {\n    filteredPeople = filteredPeople.filter(\n      person => centuries.includes(\n        Math.ceil(person.born / 100).toString(),\n      ),\n    );\n  }\n\n  if (sex !== 'All') {\n    filteredPeople = filteredPeople.filter(person => person.sex === sex);\n  }\n\n  if (query) {\n    const validQuery = query.toLocaleLowerCase().trim();\n\n    filteredPeople = filteredPeople.filter(\n      (person) => person.name.toLocaleLowerCase().includes(validQuery)\n    || person.fatherName?.toLocaleLowerCase().includes(validQuery)\n    || person.motherName?.toLocaleLowerCase().includes(validQuery),\n    );\n  }\n\n  if (sort) {\n    switch (sort) {\n      case 'name':\n      case 'sex':\n        filteredPeople = filteredPeople.sort((person1, person2) => {\n          return (order === 'desc')\n            ? person2[sort].localeCompare(person1[sort])\n            : person1[sort].localeCompare(person2[sort]);\n        });\n        break;\n      case 'born':\n      case 'died':\n        filteredPeople = filteredPeople.sort((person1, person2) => {\n          return (order === 'desc')\n            ? person2[sort] - person1[sort]\n            : person1[sort] - person2[sort];\n        });\n        break;\n      default:\n    }\n  }\n\n  return filteredPeople;\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nimport { getFilteredPeople } from '../utils/getFilteredPeople';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const [searchParams] = useSearchParams();\n\n  const visiblePeople = getFilteredPeople(people, searchParams);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!isLoading && (\n              <PeopleFilters />\n            )}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {isError && (\n                <p data-cy=\"peopleLoadingError\">Something went wrong</p>\n              )}\n              {!isLoading && !isError && !people.length && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n              {!visiblePeople.length && !isLoading && (\n                <p>There are no people matching the current search criteria</p>\n              )}\n              {!isLoading && !isError && !!visiblePeople.length && (\n                <PeopleTable\n                  people={people}\n                  visiblePeople={visiblePeople}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ninterface NavLinkProps {\n  isActive?: boolean;\n}\n\nexport const Navbar = () => {\n  const getClass = ({ isActive }: NavLinkProps) => {\n    return cn('navbar-item', { 'has-background-grey-lighter': isActive });\n  };\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getClass} to=\"/\">Home</NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={getClass}\n            to=\"people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\" element={<PeoplePage />}>\n              <Route path=\":personSlug?\" element={<PeoplePage />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}